---
import type { Page } from "astro";
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

import BaseLayout from "@layouts/BaseLayout.astro";
import BlogList from "@components/Blog/BlogList.astro";
import FancyHeading from "@components/Elements/FancyHeading.astro";
import Pagination from "@components/Elements/Pagination.astro";

const pageTitle = "der bloggende schärmu";

export const getStaticPaths = (async ({ paginate }) => {
    const allPosts = await getCollection("blog");
    allPosts.sort((a, b) => {
        if (a.data.pubDate > b.data.pubDate) {
            return -1;
        }
        if (a.data.pubDate < b.data.pubDate) {
            return 1;
        }
        return 0;
    });
    return paginate(allPosts, { pageSize: 3 });
}) satisfies GetStaticPaths;

interface Props {
    page: Page<CollectionEntry<"blog">>;
}

const { page } = Astro.props;
---

<BaseLayout pageTitle={pageTitle}>
    <Fragment slot="main">
        <FancyHeading color="blue">Schärmu's Blog</FancyHeading>
        <BlogList posts={page.data} />
        {
            page.total > 1 && (
                <Pagination
                    page={page}
                    urlPattern="/blog/{}"
                    previousLabel="Zurück"
                    nextLabel="Weiter"
                />
            )
        }
    </Fragment>
</BaseLayout>
