---
import { getCollection, getEntryBySlug } from "astro:content";
import { Picture } from "astro:assets";

import MarkdownPostLayout from "@layouts/MarkdownPostLayout.astro";

import FancyHeading from "@components/Elements/FancyHeading.astro";
import TagItem from "@components/Blog/TagItem.astro";

import { format, formatDistanceToNow } from "date-fns";
import { de } from "date-fns/locale";

export async function getStaticPaths() {
  const pages = await getCollection("blog");

  const paths = pages.map((page) => {
    return { params: { slug: page.slug || undefined }, props: page };
  });

  return paths;
}

const page = Astro.props;
const entry = await getEntryBySlug("blog", page.slug);

const { Content } = await entry.render();

const readableDate = formatDistanceToNow(new Date(page.data.pubDate), {
  locale: de,
  addSuffix: true,
});
const exactDate = format(new Date(page.data.pubDate), "dd.MM.yyyy", {
  locale: de,
});
---

<MarkdownPostLayout frontmatter={page.data}>
  <FancyHeading color="blue" classList={["mb-2"]}>
    {page.data.title}
  </FancyHeading>
  <small class="block w-full text-center text-slate-500 dark:text-slate-400"
    >Ver√∂ffentlicht {readableDate} ({exactDate})</small
  >
  <Picture
    class="w-full h-auto rounded-xl"
    formats={["webp", "avif"]}
    widths={[400, 800, 1200]}
    sizes="(max-width: 1200px) 100vw, 1200px"
    src={entry.data.cover.src}
    alt={entry.data.cover.alt}
    width={800}
    height={250}
  />
  <div class="not-prose mt-10">
    {
      page.data.tags.map((tag: string) => (
        <TagItem classList={["gap-2"]} label={tag} href={`/blog/tags/${tag}`} />
      ))
    }
  </div>
  <p class="lead">{page.data.lead}</p>
  <Content frontmatter={entry.data} />
</MarkdownPostLayout>
